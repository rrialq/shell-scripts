. ./console.source


# $1 = Message
# $2 = Debug level. Default=INFO.
debug() {
    local level=${2:-INFO}
    local color=${DEBUG_COLOR[${level}]}
    if [ "${color}" = '' ]; then
        level=INFO
        color=${DEBUG_COLOR[INFO]}
    fi
    if ! [ "${level}" = DISABLED ]; then 
        local levelValue=${DEBUG_LEVEL_VALUE[${level}]}
        if [ ${DEBUG_LEVEL} -ge ${levelValue} ]; then
            printf ${DEBUG_FORMAT} ${color} [${level}] "${1}${STYLE[normal]}"
        fi
    fi
}

debugError() {
    debug "${1}" ERROR
}

debugWarning() {
    debug "${1}" WARNING
}

debugInfo() {
    debug "${1}" INFO
}

debugFine() {
    debug "${1}" FINE
}

debugFinest() {
    debug "${1}" FINEST
}

# Sets the greatest level to print.
# $1 = One of the available debug levels: ERROR, WARNING or INFO.
debugLevel() {
    local level=${DEBUG_LEVEL_VALUE[${1}]}
    if [ ${level+x} ]; then
        DEBUG_LEVEL=${level}
    fi
}

debugPrint() {
    local lastLevel=${DEBUG_LEVEL}
    debugLevel INFO
    debugInfo "* DEBUG_LEVEL ${1}"
    debugLevel ${1}
    
    for key in ${DEBUG_LEVELS[@]}; do
        debug "  + This is a message ${key} level" ${key}
    done
    DEBUG_LEVEL=${lastLevel}
}
debugSetFormat() {
    local newFormat=${DEBUG_FORMATS[${1:-NORMAL}]}
    if [ "${newFormat}" = '' ]; then
        newFormat=${DEBUG_FORMATS[NORMAL]}
    fi
    DEBUG_FORMAT=${newFormat}
}

debug_demo() {
    printTitle 'Debug levels demo'
    for key in ${DEBUG_LEVELS[@]}; do
        debugPrint ${key}
    done
}


if [ -z ${DEBUG_LOADED+x} ]; then
    declare -A DEBUG_COLOR=([DISABLED]=${DEBUG_ERROR_COLOR:-${COLOR[blackl]}} \
        [ERROR]=${DEBUG_ERROR_COLOR:-${COLOR[red]}} \
        [WARNING]=${DEBUG_WARNING_COLOR:-${COLOR[yellow]}} \
        [INFO]=${DEBUG_INFO_COLOR:-${COLOR[green]}} \
        [FINE]=${DEBUG_FINE_COLOR:-${COLOR[cyan]}} \
        [FINEST]=${DEBUG_FINEST_COLOR:-${COLOR[blue]}})
    declare -A DEBUG_LEVEL_VALUE=([DISABLED]=-1 [ERROR]=0 [WARNING]=1 [INFO]=2 [FINE]=3 [FINEST]=4)
    declare -a DEBUG_LEVELS=(DISABLED ERROR WARNING INFO FINE FINEST)
    declare -A DEBUG_FORMATS=([NO_LEVEL]='%s%.s%s\n' [NORMAL]='%s%-10s%s\n')
    DEBUG_LOADED=1
    
    debugSetFormat NO_LEVEL
    debugLevel INFO
fi
