#apt install ncurses ncurses_utils

if [ "${ANSI_LOADED}" = "" ]; then
    trap 'screen_onResized' WINCH
    tput_cmd=$(which tput)
    
    if [ -x ${tput_cmd} ] && tput setaf 1 &> /dev/null; then
        if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
            #Foreground colors
            COLOR_BLACK=$(tput setaf 0)
            COLOR_RED=$(tput setaf 1)
            COLOR_GREEN=$(tput setaf 2)
            COLOR_YELLOW=$(tput setaf 3)
            COLOR_BLUE=$(tput setaf 4)
            COLOR_MAGENTA=$(tput setaf 5)
            COLOR_CYAN=$(tput setaf 6)
            COLOR_WHITE=$(tput setaf 7)
            COLOR_ORANGE=$(tput setaf 9)
            COLOR_VIOLET=$(tput setaf 13)
            
            #Background colors
            BACKGROUND_BLACK=$(tput setaf 0)
            BACKGROUND_RED=$(tput setaf 1)
            BACKGROUND_GREEN=$(tput setaf 2)
            BACKGROUND_YELLOW=$(tput setaf 3)
            BACKGROUND_BLUE=$(tput setaf 4)
            BACKGROUND_MAGENTA=$(tput setaf 5)
            BACKGROUND_CYAN=$(tput setaf 6)
            BACKGROUND_WHITE=$(tput setaf 7)
        else
            COLOR_YELLOW=$(tput setaf 3)
            COLOR_ORANGE=$(tput setaf 9)
            COLOR_RED=$(tput setaf 1)
            COLOR_MAGENTA=$(tput setaf 5)
            COLOR_VIOLET=$(tput setaf 13)
            COLOR_BLUE=$(tput setaf 4)
            COLOR_CYAN=$(tput setaf 6)
            COLOR_GREEN=$(tput setaf 2)
        fi
        
        TEXT_BOLD=$(tput bold)
        TEXT_DIM=$(tput dim)
        TEXT_UNDER=$(tput smul)
        TEXT_REVERSE=$(tput rev)
        TEXT_STANDOUT=$(tput smso)
    
        TEXT_NORMAL=$(tput sgr0)
        BOLD_TEXT=${TEXT_NORMAL}
        DIM_TEXT=${TEXT_NORMAL}
        UNDER_TEXT=$(tput rmul)
        REVERSE_TEXT=${TEXT_NORMAL}
        STANDOUT_TEXT=$(tput rmso)
    
    else
        TEXT_BOLD="\e[1m"
        TEXT_DIM='\e[2m'
        TEXT_UNDER='\e[4m'
        TEXT_BLINK='\e[5m'
        TEXT_REVERSE='\e[7m'
        TEXT_HIDDEN='\e[8m'
        
        TEXT_NORMAL="\e[0m"
        BOLD_TEXT="\e[21m"
        DIM_TEXT='\e[22m'
        UNDER_TEXT='\e[24m'
        BLINK_TEXT='\e[25m'
        REVERSE_TEXT='\e[27m'
        HIDDEN_TEXT='\e[28m'
    
        COLOR_DEFAULT='\e39m'
        COLOR_BLACK="\e[1;30m"
        COLOR_RED="\e[1;31m"
        COLOR_GREEN="\e[1;32m"
        COLOR_YELLOW="\e[1;33m" 
        COLOR_BLUE="\e[1;34m"
        COLOR_MAGENTA="\e[1;31m"
        COLOR_CYAN="\e[1;36m"
        COLOR_WHITE="\e[1;37m"
        COLOR_ORANGE="\e[1;33m"
        COLOR_PURPLE="\e[1;35m"
        
        BACKGROUND_DEFAULT='\e49m'
        BACKGROUND_BLACK='\e[40m'
        BACKGROUND_RED='\e[41m'
        BACKGROUND_GREEN='\e[42m'
        BACKGROUND_YELLOW='\e[43m'
        BACKGROUND_BLUE='\e[44m'
        BACKGROUND_MAGENTA='\e[45m'
        BACKGROUND_CYAN='\e[46m'
        BACKGROUND_WHITE='\e[107m'
    fi
    
    COUNT_COLORS=$(tput colors)
fi

ansi_demo() {
    echo 'Colors demo'
    printf "${COLOR_RED}Red"
    printf " ${COLOR_GREEN}Green"
    printf " ${COLOR_YELLOW}Yellow"
    printf " ${COLOR_BLUE}Blue"
    printf " ${COLOR_MAGENTA}Magenta"
    printf " ${COLOR_CYAN}Cyan"
    printf " ${COLOR_WHITE}White\n\n"
    
    printf "${TEXT_BOLD}Bold${BOLD_TEXT}"
    printf " ${TEXT_DIM}Dim${DIM_TEXT}"
    printf " ${TEXT_UNDER}Underline${UNDER_TEXT}"
    printf " ${TEXT_REVERSE}Reverse${REVERSE_TEXT}"
    printf " ${TEXT_STANDOUT}Standout${STANDOUT_TEXT}"
    
    printf "${TEXT_NORMAL}\n\n"
}

hideCursor() {
    tput civis
}

showCursor() {
    tput cnorm
}


screen_onResized() {
    ROWS=`tput lines`
    COLS=`tput cols`
    SEPARATOR_UNDERLINE=''
    for i in `seq 1 $COLS`; do
        SEPARATOR_UNDERLINE="${SEPARATOR_UNDERLINE}\u2501"
    done
 
  return 0
}

if [ "${ANSI_LOADED}" = "" ]; then
    ANSI_LOADED="true"
    screen_onResized
    printf "${SEPARATOR_UNDERLINE}\n"
fi